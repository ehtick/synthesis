syntax = "proto3";

package SynthesisAPI.Proto;

enum DynamicType {
    FIELD = 0;
    SIM = 1;
    GAMEPIECE = 2;
}

message ProtoAssembly {
    DynamicType type = 1;
    SimObject simObject = 2;
}

message SimObject {
    string name = 1;
    string serializerSignature = 2;
    map<string, Node> nodeRefMap = 3;
    map<string, Occurrence> occurrenceMap = 6;
    map<string, Component> componentRefMap = 7;
    map<string, Joint> jointRefMap = 8;
    map<string, Material> materialRefMap = 9;
}

message Node {
    repeated string occurrences = 1; // Occurrences shouldn't be stored more than once in all given nodes so this is a bit redundant
    repeated string joints = 2;

    bool isRoot = 3;
    bool isStatic = 4;

    Spatial transform = 5;
}

//
// Occurrences
// 
// Occurrences exist once within all given nodes
//
message Occurrence {
    string name = 1;
    string componentRef = 2;

    string GUID = 5;
    string parentGUID = 6;
    repeated string children = 7;

    Spatial transform = 3;
}

message Component {
    Spatial transform = 3;
    PhysProps physicalProperties = 4;

    repeated Body bodies = 2;
}

message Joint {
    Vec3 axis = 1;
    Vec3 anchor = 2;

    float massScale = 7;

    bool useLimits = 8;
    bool isWheel = 9;

    oneof joint {
        RotationalJoint rotationalJoint = 10;
        OtherJoint otherJoint = 11;
    }

    JointMotor motor = 12;
    
    string node1 = 13;
    string node2 = 14;
}

message Body {
    string GUID = 1;
    oneof Mesh {
        UniqueMesh uniqueMesh = 6;
        Sphere sphereMesh = 7;
    }
    Spatial transform = 5;
}

message UniqueMesh {
    repeated Vec3 vertices = 1;
    repeated int32 triangles = 2;
    repeated SubMeshDefinition subMeshes = 3;
}

message Sphere {
    Vec3 center = 1;
    float radius = 2;
}

message RotationalJoint {
    float currentAngle = 3;
    float lowerLimit = 4;
    float upperLimit = 5;

    enum ProtoWheelType {
        NORMAL = 0;
        OMNI = 1;
        MECANUM = 2;
    }

    ProtoWheelType wheelType = 10;
}

message JointMotor {
    float maxSpeed = 1;
    float torque = 2;
    bool useBreak = 3;
}

message OtherJoint {
    float massScale = 2;
}

message PhysProps {
    float mass = 1;
    Vec3 centerOfMass = 2;
    float dynamicFriction = 4;
    float staticFriction = 5;
}

message SubMeshDefinition {
    int32 start = 1;
    int32 count = 2;
    string material = 3;
}

message Material {
    int32 red = 1;
    int32 green = 2;
    int32 blue = 3;
    int32 alpha = 4;
    float specular = 5;
    bool emissive = 6;
}

message Vec3 {
    float x = 1;
    float y = 2;
    float z = 3;
}

message Quat {
    float x = 1;
    float y = 2;
    float z = 3;
    float w = 4;
}

message Spatial {
    repeated float matrix = 1;
}

// message ProtoGuid {
//     string guid = 1;
// }
